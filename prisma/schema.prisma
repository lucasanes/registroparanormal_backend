// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//npx prisma migrate dev

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumRole {
  USER
  ADMIN
}

model Recovery {
  id Int @id @default(autoincrement())

  code String

  created_at String

  userEmail String
  user      User   @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@map("recoveries")
}

model User {
  id Int @id @default(autoincrement())

  nome       String
  username   String   @unique
  email      String   @unique
  senha      String
  created_at DateTime @default(now())
  role       EnumRole @default(USER)

  Fichas          Ficha[]
  Sessoes         Sessao[]
  souParticipante Participante[]
  convites        Convite[]
  recoveries      Recovery[]

  @@map("users")
}

model Sessao {
  id         Int   @id @default(autoincrement())
  nome       String
  descricao  String
  created_at DateTime @default(now())

  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  Fichas        Ficha[]
  FichasNPC     FichaNPC[]
  Monstros      FichaNPCMonstro[]
  Participantes Participante[]
  Convites      Convite[]
  Anotacoes     Anotacao[]
  Iniciativas   Iniciativa[]
  Dados         Dado[]
  Itens         Item[]
  Armas         Arma[]

  @@map("sessoes")
}

model Participante {
  id         Int   @id @default(autoincrement())
  created_at DateTime @default(now())

  sessaoId Int
  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("participantes")
}

model Convite {
  id         Int   @id @default(autoincrement())
  created_at DateTime @default(now())

  sessaoId Int
  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  userEmail String
  user      User   @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@map("convites")
}

model Anotacao {
  id         Int   @id @default(autoincrement())
  nome       String
  descricao  String?
  created_at DateTime @default(now())

  sessaoId Int
  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  @@map("anotacoes")
}

model Iniciativa {
  id         Int   @id @default(autoincrement())
  posicao    Int
  nome       String
  iniciativa Int
  dano       Int
  created_at DateTime @default(now())

  sessaoId Int
  sessao   Sessao @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  @@map("iniciativas")
}

model Dado {
  id     Int  @id @default(autoincrement())
  nome   String
  valor  String
  isDano Boolean

  created_at DateTime @default(now())

  fichaId Int?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  @@map("dados")
}

model Item {
  id        Int  @id @default(autoincrement())
  nome      String
  descricao String?
  espaco    Int
  categoria Int

  imagem String?

  isMunicao Boolean?

  municao    Int?
  municaoMax Int?

  created_at DateTime @default(now())

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  fichaId Int?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("itens")
}

model Arma {
  id            Int  @id @default(autoincrement())
  nome          String
  tipo          String
  ataque        String
  dano          String
  margemCritico Int
  danoCritico   String
  recarga       Int?
  alcance       String
  especial      String?

  descricao String?
  espaco    Int
  categoria Int

  municao Int?

  imagem String?

  created_at DateTime @default(now())

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  fichaId Int?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("armas")
}

model Ficha {
  id         Int   @id @default(autoincrement())
  created_at DateTime @default(now())

  isPublic Boolean @default(false)

  userId   Int
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  Principal     Principal[]
  Atributos     Atributo[]
  Status        Status[]
  Pericias      Pericias[]
  Defesas       Defesas[]
  Personagem    Personagem[]
  Dados         Dado[]
  Itens         Item[]
  Armas         Arma[]
  Participantes Participante[]
  Portrait      Portrait[]
  Habilidades   Habilidade[]
  Poderes       Poder[]
  Proficiencias Proficiencia[]
  Rituais       Ritual[]

  @@map("fichas")
}

model FichaNPC {
  id         Int   @id @default(autoincrement())
  created_at DateTime @default(now())

  nome          String
  classe        String
  origem        String
  nacionalidade String
  idade         Int
  deslocamento  Int
  nex           Int
  trilha        String?
  patente       String?
  peso          Int

  agi Int
  int Int
  vig Int
  pre Int
  for Int

  pv    Int
  pvMax Int
  ps    Int
  psMax Int
  pe    Int
  peMax Int

  acrobacia     Int?
  adestramento  Int?
  arte          Int?
  atletismo     Int?
  atualidade    Int?
  ciencia       Int?
  crime         Int?
  diplomacia    Int?
  enganacao     Int?
  fortitude     Int?
  furtividade   Int?
  iniciativa    Int?
  intimidacao   Int?
  intuicao      Int?
  investigacao  Int?
  luta          Int?
  medicina      Int?
  ocultismo     Int?
  percepcao     Int?
  pilotagem     Int?
  pontaria      Int?
  profissao     Int?
  reflexo       Int?
  religiao      Int?
  sobrevivencia Int?
  sorte         Int?
  tatica        Int?
  tecnologia    Int?
  vontade       Int?

  passiva      Int?
  esquiva      Int?
  bloqueio     Int?
  mental       Int?
  morte        Int?
  conhecimento Int?
  sangue       Int?
  energia      Int?
  fisica       Int?
  balistica    Int?
  corte        Int?
  impacto      Int?
  perfuracao   Int?
  eletricidade Int?
  fogo         Int?
  frio         Int?
  quimica      Int?

  inventario  String?
  ataques     String?
  habilidades String?
  detalhes    String?

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  @@map("fichasNPCs")
}

model FichaNPCMonstro {
  id         Int   @id @default(autoincrement())
  created_at DateTime @default(now())

  nome         String
  deslocamento Int
  nex          Int

  agi Int
  int Int
  vig Int
  pre Int
  for Int

  pv    Int
  pvMax Int

  acrobacia     Int?
  adestramento  Int?
  arte          Int?
  atletismo     Int?
  atualidade    Int?
  ciencia       Int?
  crime         Int?
  diplomacia    Int?
  enganacao     Int?
  fortitude     Int?
  furtividade   Int?
  iniciativa    Int?
  intimidacao   Int?
  intuicao      Int?
  investigacao  Int?
  luta          Int?
  medicina      Int?
  ocultismo     Int?
  percepcao     Int?
  pilotagem     Int?
  pontaria      Int?
  profissao     Int?
  reflexo       Int?
  religiao      Int?
  sobrevivencia Int?
  sorte         Int?
  tatica        Int?
  tecnologia    Int?
  vontade       Int?

  passiva      Int?
  esquiva      Int?
  bloqueio     Int?
  mental       Int?
  morte        Int?
  conhecimento Int?
  sangue       Int?
  energia      Int?
  fisica       Int?
  balistica    Int?
  corte        Int?
  impacto      Int?
  perfuracao   Int?
  eletricidade Int?
  fogo         Int?
  frio         Int?
  quimica      Int?

  ataques     String?
  habilidades String?
  detalhes    String?

  sessaoId Int?
  sessao   Sessao? @relation(fields: [sessaoId], references: [id], onDelete: Cascade)

  @@map("fichasNPCsMonstros")
}

model Principal {
  id Int @id @default(autoincrement())

  nome           String
  jogador        String
  classe         String
  origem         String
  nacionalidade  String
  peprod         Int
  idade          Int
  idadeAdicional Int?
  deslocamento   Int
  nex            Int
  trilha         String?
  patente        String

  fichaId Int?
  ficha   Ficha?  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasPrincipal")
}

model Atributo {
  id Int @id @default(autoincrement())

  agi Int
  int Int
  vig Int
  pre Int
  for Int

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasAtributo")
}

model Status {
  id Int @id @default(autoincrement())

  combate      Boolean
  insano       Boolean
  danoMassivo  Boolean
  inconsciente Boolean

  pv     Int
  pvMax  Int
  pv2    Int?
  pvMax2 Int?
  ps     Int
  psMax  Int
  ps2    Int?
  psMax2 Int?
  pe     Int
  peMax  Int
  pe2    Int?
  peMax2 Int?

  peso Int

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasStatus")
}

model Pericias {
  id Int @id @default(autoincrement())

  acrobacia     Int?
  adestramento  Int?
  arte          Int?
  atletismo     Int?
  atualidade    Int?
  ciencia       Int?
  crime         Int?
  diplomacia    Int?
  enganacao     Int?
  fortitude     Int?
  furtividade   Int?
  iniciativa    Int?
  intimidacao   Int?
  intuicao      Int?
  investigacao  Int?
  luta          Int?
  medicina      Int?
  ocultismo     Int?
  percepcao     Int?
  pilotagem     Int?
  pontaria      Int?
  profissao     Int?
  reflexo       Int?
  religiao      Int?
  sobrevivencia Int?
  sorte         Int?
  tatica        Int?
  tecnologia    Int?
  vontade       Int?

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasPericias")
}

model Defesas {
  id Int @id @default(autoincrement())

  passiva      Int?
  esquiva      Int?
  bloqueio     Int?
  mental       Int?
  morte        Int?
  conhecimento Int?
  sangue       Int?
  energia      Int?
  fisica       Int?
  balistica    Int?
  corte        Int?
  impacto      Int?
  perfuracao   Int?
  eletricidade Int?
  fogo         Int?
  frio         Int?
  quimica      Int?

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasDefesas")
}

model Personagem {
  id Int @id @default(autoincrement())

  historia            String?
  aparencia           String?
  pep                 String?
  dfm                 String?
  favoritos           String?
  personalidade       String?
  piorpesadelo        String?
  anotacoesPlayer     String?
  anotacoesPersonagem String?

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasPersonagem")
}

model Portrait {
  id Int @id @default(autoincrement())

  normal          String?
  ferido          String?
  morrendo        String?
  insano          String?
  insanoeferido   String?
  insanoemorrendo String?

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasPortrait")
}

model Habilidade {
  id Int @id @default(autoincrement())

  nome      String
  descricao String

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasHabilidades")
}

model Poder {
  id Int @id @default(autoincrement())

  nome      String
  descricao String

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasPoderes")
}

model Proficiencia {
  id Int @id @default(autoincrement())

  nome String

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasProficiencias")
}

model Ritual {
  id Int @id @default(autoincrement())

  nome        String
  circulo     Int
  alcance     String
  elemento    String
  execucao    String
  duracao     String
  alvo        String
  resistencia String?

  normal     String?
  discente   String?
  verdadeiro String?

  descricao String?
  imagem    String?

  fichaId Int
  ficha   Ficha  @relation(fields: [fichaId], references: [id], onDelete: Cascade)

  @@map("fichasRituais")
}

//npx prisma migrate dev
